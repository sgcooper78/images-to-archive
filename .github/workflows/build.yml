name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            ext: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
          - os: windows-latest
            goos: windows
            goarch: arm64
            ext: ".exe"
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
          - os: macos-latest
            goos: darwin
            goarch: arm64
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebp-dev pkg-config

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install webp pkg-config

      - name: Install system dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "Windows build - no additional dependencies needed"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: |
          CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o cbz-converter${{ matrix.ext }} main.go

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cbz-converter-${{ matrix.goos }}-${{ matrix.goarch }}
          path: cbz-converter${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          cd artifacts
          
          # Move and rename files for better organization
          for dir in */; do
            if [ -d "$dir" ]; then
              cd "$dir"
              for file in *; do
                if [ -f "$file" ]; then
                  # Extract OS and arch from directory name
                  os_arch=$(echo "$dir" | sed 's/cbz-converter-\(.*\)-\(.*\)/\1-\2/')
                  # Create a more descriptive filename
                  new_name="cbz-converter-${os_arch}${file##cbz-converter}"
                  cp "$file" "../../release/$new_name"
                fi
              done
              cd ..
            fi
          done
          
          # Create a checksums file
          cd ../release
          sha256sum * > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
